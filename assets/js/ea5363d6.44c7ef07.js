"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2368],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>m});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),c=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,m=p["".concat(i,".").concat(f)]||p[f]||g[f]||a;return r?t.createElement(m,l(l({ref:n},u),{},{components:r})):t.createElement(m,l({ref:n},u))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=f;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7433:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var t=r(7462),o=(r(7294),r(3905));const a={slug:"production-installation-argo-workflow",title:"\u751f\u4ea7\u5b89\u88c5Argo-Workflow",authors:["w"],tags:["install","Argo Workflow","Kubernetes"]},l=void 0,s={permalink:"/blog/production-installation-argo-workflow",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-08-23-production-installation-argo-workflow/index.md",source:"@site/blog/2023-08-23-production-installation-argo-workflow/index.md",title:"\u751f\u4ea7\u5b89\u88c5Argo-Workflow",description:"Argo Workflow \u751f\u4ea7\u5b89\u88c5",date:"2023-08-23T00:00:00.000Z",formattedDate:"2023\u5e748\u670823\u65e5",tags:[{label:"install",permalink:"/blog/tags/install"},{label:"Argo Workflow",permalink:"/blog/tags/argo-workflow"},{label:"Kubernetes",permalink:"/blog/tags/kubernetes"}],readingTime:2.68,hasTruncateMarker:!1,authors:[{name:"W",url:"https://github.com/qingfengfenga",imageURL:"https://github.com/qingfengfenga.png",key:"w"}],frontMatter:{slug:"production-installation-argo-workflow",title:"\u751f\u4ea7\u5b89\u88c5Argo-Workflow",authors:["w"],tags:["install","Argo Workflow","Kubernetes"]},nextItem:{title:"\u4f7f\u7528 Github Pages \u6258\u7ba1 Docusaurs \u9875\u9762",permalink:"/blog/hosting-docusaurs-pages-using-github-pages"}},i={authorsImageUrls:[void 0]},c=[{value:"\u4f7f\u7528 Helm \u5b89\u88c5 Argo Workflow",id:"\u4f7f\u7528-helm-\u5b89\u88c5-argo-workflow",level:2}],u={toc:c},p="wrapper";function g(e){let{components:n,...r}=e;return(0,o.kt)(p,(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Argo Workflow \u751f\u4ea7\u5b89\u88c5"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://argoproj.github.io/argo-workflows/installation/#production-installation"},"https://argoproj.github.io/argo-workflows/installation/#production-installation")),(0,o.kt)("h2",{id:"\u4f7f\u7528-helm-\u5b89\u88c5-argo-workflow"},"\u4f7f\u7528 Helm \u5b89\u88c5 Argo Workflow"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/argoproj/argo-helm"},"https://github.com/argoproj/argo-helm")),(0,o.kt)("p",null,"Helm\u548cApp\u7248\u672c\u5bf9\u5e94\u5173\u7cfb\uff0c\u548c\u914d\u7f6e\u9879\n",(0,o.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/argo/argo-workflows"},"https://artifacthub.io/packages/helm/argo/argo-workflows")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Argo Workflow v3.2.6")," \u5bf9\u5e94\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"Heml Chart"),"\u7248\u672c\u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"0.10.0")),(0,o.kt)("p",null,"\u914d\u7f6e\u5de5\u4ef6\u5b58\u50a8\n",(0,o.kt)("a",{parentName:"p",href:"https://argoproj.github.io/argo-workflows/configure-artifact-repository/#configuring-minio"},"https://argoproj.github.io/argo-workflows/configure-artifact-repository/#configuring-minio")),(0,o.kt)("p",null,"minio\u914d\u7f6e\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// \u81ea\u52a8\u521b\u5efaBucket\ndefaultBucket.enabled: true\ndefaultBucket.name: my-bucket\n\n// \u670d\u52a1\u8bbe\u7f6e\nservice.type: LoadBalancer \nfullnameOverride: argo-artifacts\n\n\n// \u5b58\u50a8\u7c7b\npersistence.enabled: false\n\n// pod\u914d\u7f6e\nresources:\n  requests:\n    memory: 512Mi\n\n")),(0,o.kt)("p",null,"Argo Workflow \u914d\u7f6e\u6587\u4ef6"),(0,o.kt)("p",null,"\u4fee\u6539helm\u914d\u7f6e\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\nhelm upgrade my-argo-workflows -n argo-test --set singleNamespace=true --set server.serviceType=NodePort --set server.serviceNodePort=30016 --set server.nodeSelector="kubernetes.io/hostname: cn-shanghai.192.168.0.228" --set server.extraArgs="--auth-mode=server"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// \u5f00\u542f\u4f46\u547d\u540d\u7a7a\u95f4\u6a21\u5f0f\nsingleNamespace: true\n\n// \u5f00\u542fNodePort\nserver.serviceType: NodePort\n\n// \u6307\u5b9aNodePort\u7aef\u53e3\nserver.serviceNodePort: 30016\n\n// \u6307\u5b9a\u8282\u70b9\nserver.nodeSelector: kubernetes.io/hostname: cn-shanghai.192.168.0.228\n\n// \u7981\u7528\u8eab\u4efd\u9a8c\u8bc1\nserver.extraArgs: --auth-mode=server\n\n// \u914d\u7f6e\u5de5\u4ef6\u5b58\u50a8\u5e93\nartifactRepository:\n  s3:\n    accessKeySecret:\n      key: accesskey\n    insecure: true\n    secretKeySecret:\n      key: secretkey\n      name: argo-artifacts\n    bucket: my-bucket\n    endpoint: argo-artifacts.argo-dev.svc.cluster.local:9000\n\n  s3:\n    accessKeySecret:\n      key: accesskey\n    insecure: true\n    secretKeySecret:\n      key: secretkey\n\n")),(0,o.kt)("p",null,"\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"server.extraArgs: [--auth-mode=server]\n\nhelm install argo-workflows argo/argo-workflows --version 0.10.0 -n argo-test --set server.extraArgs=--auth-mode=server\n")),(0,o.kt)("p",null,"Helm \u914d\u7f6e\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"artifactRepository:\n  archiveLogs: false\n  gcs: {}\n  s3:\n    accessKeySecret:\n      key: accesskey\n    insecure: true\n    secretKeySecret:\n      key: secretkey\ncontroller:\n  affinity: {}\n  clusterWorkflowTemplates:\n    enabled: true\n  containerRuntimeExecutor: docker\n  containerRuntimeExecutors: []\n  extraArgs: []\n  extraContainers: []\n  extraEnv: []\n  image:\n    registry: quay.io\n    repository: argoproj/workflow-controller\n    tag: ''\n  initialDelay: null\n  instanceID:\n    enabled: false\n    explicitID: ''\n    useReleaseName: false\n  links: []\n  livenessProbe:\n    failureThreshold: 3\n    httpGet:\n      path: /healthz\n      port: 6060\n    initialDelaySeconds: 90\n    periodSeconds: 60\n    timeoutSeconds: 30\n  loadBalancerSourceRanges: []\n  logging:\n    globallevel: '0'\n    level: info\n  metricsConfig:\n    enabled: false\n    path: /metrics\n    port: 9090\n    portName: metrics\n    servicePort: 8080\n    servicePortName: metrics\n  name: workflow-controller\n  namespaceParallelism: null\n  nodeSelector:\n    kubernetes.io/os: linux\n  parallelism: null\n  pdb:\n    enabled: false\n  persistence: {}\n  podAnnotations: {}\n  podLabels: {}\n  podSecurityContext: {}\n  podWorkers: null\n  priorityClassName: ''\n  replicas: 1\n  resourceRateLimit: {}\n  resources: {}\n  securityContext:\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n        - ALL\n    readOnlyRootFilesystem: true\n    runAsNonRoot: true\n  serviceAccount:\n    annotations: {}\n    create: true\n    name: ''\n  serviceAnnotations: {}\n  serviceLabels: {}\n  serviceMonitor:\n    additionalLabels: {}\n    enabled: false\n    namespace: ''\n  serviceType: ClusterIP\n  telemetryConfig:\n    enabled: false\n    path: /telemetry\n    port: 8081\n    servicePort: 8081\n    servicePortName: telemetry\n  tolerations: []\n  workflowDefaults: {}\n  workflowNamespaces:\n    - default\n  workflowRestrictions: {}\n  workflowWorkers: null\ncreateAggregateRoles: true\nexecutor:\n  env: {}\n  image:\n    registry: quay.io\n    repository: argoproj/argoexec\n    tag: ''\n  resources: {}\n  securityContext: {}\nfullnameOverride: null\nimages:\n  pullPolicy: Always\n  pullSecrets: []\nkubeVersionOverride: ''\nnameOverride: null\nserver:\n  affinity: {}\n  baseHref: /\n  clusterWorkflowTemplates:\n    enableEditing: true\n    enabled: true\n  enabled: true\n  extraArgs: []\n  extraContainers: []\n  extraEnv: []\n  image:\n    registry: quay.io\n    repository: argoproj/argocli\n    tag: ''\n  ingress:\n    annotations: {}\n    enabled: false\n    extraPaths: []\n    hosts: []\n    ingressClassName: ''\n    labels: {}\n    pathType: Prefix\n    paths:\n      - /\n    tls: []\n  loadBalancerIP: ''\n  loadBalancerSourceRanges: []\n  name: server\n  nodeSelector:\n    kubernetes.io/os: linux\n  pdb:\n    enabled: false\n  podAnnotations: {}\n  podLabels: {}\n  podSecurityContext: {}\n  priorityClassName: ''\n  replicas: 1\n  resources: {}\n  secure: false\n  securityContext:\n    allowPrivilegeEscalation: false\n    capabilities:\n      drop:\n        - ALL\n    readOnlyRootFilesystem: false\n    runAsNonRoot: true\n  serviceAccount:\n    annotations: {}\n    create: true\n    name: ''\n  serviceAnnotations: {}\n  serviceLabels: {}\n  serviceNodePort: null\n  servicePort: 2746\n  servicePortName: ''\n  serviceType: ClusterIP\n  sso: {}\n  tolerations: []\n  volumeMounts: []\n  volumes: []\nsingleNamespace: false\nuseDefaultArtifactRepo: false\nuseStaticCredentials: true\nworkflow:\n  namespace: null\n  rbac:\n    create: true\n  serviceAccount:\n    annotations: {}\n    create: false\n    name: argo-workflow\n")))}g.isMDXComponent=!0}}]);